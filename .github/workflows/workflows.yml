name: Pipeline

permissions:
  checks: write
  contents: write
  pull-requests: write # only required if `comment: true` was enabled

on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Debug -DBUILD_UNIT_TESTS="True"

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config Debug

      - name: Test
        working-directory: ${{github.workspace}}/build/src/test
        run: ctest --version && ctest -C Debug --extra-verbose --output-junit ./test-result.xml

      - name: Test Report
        uses: mikepenz/action-junit-report@v5
        #if: (success() || failure()) && ${{github.ref == 'refs/heads/master'}}
        with:
          report_paths: '${{github.workspace}}/build/src/test/test-result.xml'
          comment: true
          updateComment: true

      - name: Install Gcovr
        run: pipx install gcovr

      - name: Coverage
        working-directory: ${{github.workspace}}
        run: gcovr -f src/main -r . --html -o cov-report/coverage.html --print-summary --jacoco cov-report/jacoco.xml

      - name: Generate JaCoCo Badge
        #if: (success() || failure()) && ${{github.ref == 'refs/heads/master'}}
        uses: cicirello/jacoco-badge-generator@v2
        with:
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
          badges-directory: build/reports/jacoco/test/html/badges

      - name: Coverage Report
        uses: JamesIves/github-pages-deploy-action@v4
        #if: (success() || failure()) && ${{github.ref == 'refs/heads/master'}}
        with:
          folder: build/cov-report

  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config Release

      - name: Run
        working-directory: ${{github.workspace}}/build/src/main
        run: make ci_cd_hello_world &&  ls -alh && ./ci_cd_hello_world